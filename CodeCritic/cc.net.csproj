<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>_client\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.12" />
    <PackageReference Include="Docker.DotNet" Version="3.125.2" />
    <PackageReference Include="Microsoft.AspNetCore.StaticFiles" Version="2.2.0" />
    <PackageReference Include="MongoDB.Bson" Version="2.24.0" />
    <PackageReference Include="MongoDB.Driver" Version="2.24.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="4.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.1.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.1.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.4.0" />
    <PackageReference Include="YamlDotNet" Version="8.1.0" />
    <PackageReference Include="TypeLite" Version="1.8.4" />
    <PackageReference Include="DiffPlex" Version="1.5.0" />
    <PackageReference Include="Markdig" Version="0.18.3" />
    <PackageReference Include="OneOf" Version="3.0.201" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    <None Remove="_client\**" />
    <Content Remove="_client\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="appsettings.secret.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="_client\**" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Remove="_client\**" />
  </ItemGroup>

  <ItemGroup>
    <_ContentIncludedByDefault Remove="_client\package-lock.json" />
    <_ContentIncludedByDefault Remove="_client\package.json" />
    <_ContentIncludedByDefault Remove="_client\public\manifest.json" />
    <_ContentIncludedByDefault Remove="_client\tsconfig.json" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
